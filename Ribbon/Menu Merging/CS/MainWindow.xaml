<syncfusion:RibbonWindow
    x:Class="RibbonMenuMerging.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:interactivity="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:local="clr-namespace:RibbonMenuMerging"
    xmlns:skinManager="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    x:Name="ribbonWindow"
    Title="Menu Merging"
    Width="850"
    Height="550"
    skinManager:SfSkinManager.VisualStyle="MaterialLight"
    Icon="App.ico"
    Office2010Icon="App.ico"
    WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <local:BooltoSizeformConverter x:Key="SizeFormConverter" />
        <local:ItemDataTemplateSelector x:Key="TemplateSelector" />
        <local:ImageConverter x:Key="ImageConverter" />
        <DataTemplate x:Key="DefaultTemplate">
            <StackPanel Orientation="Horizontal">
                <Image
                    Width="20"
                    Height="20"
                    Source="{Binding Path=Image}" />
                <TextBlock Margin="5,5" Text="{Binding Path=Name}" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="Ribbonbutton">
            <syncfusion:RibbonButton
                HorizontalAlignment="Left"
                Command="{Binding Command}"
                Label="{Binding ItemHeader}"
                LargeIcon="{Binding Image, Converter={StaticResource ImageConverter}}"
                SizeForm="{Binding IsLarge, Converter={StaticResource SizeFormConverter}}"
                SmallIcon="{Binding Image, Converter={StaticResource ImageConverter}}" />
        </DataTemplate>
        <DataTemplate x:Key="Splitbutton">
            <syncfusion:SplitButton
                HorizontalAlignment="Left"
                Label="{Binding ItemHeader}"
                LargeIcon="{Binding Image, Converter={StaticResource ImageConverter}}"
                SizeForm="{Binding IsLarge, Converter={StaticResource SizeFormConverter}}"
                SmallIcon="{Binding Image, Converter={StaticResource ImageConverter}}" />
        </DataTemplate>
        <DataTemplate x:Key="DropDownButton">
            <syncfusion:DropDownButton
                HorizontalAlignment="Left"
                Label="{Binding ItemHeader}"
                LargeIcon="{Binding Image, Converter={StaticResource ImageConverter}}"
                SizeForm="{Binding IsLarge, Converter={StaticResource SizeFormConverter}}"
                SmallIcon="{Binding Image, Converter={StaticResource ImageConverter}}">
                <ListBox
                    x:Name="itemsList"
                    BorderThickness="0"
                    ItemTemplate="{StaticResource DefaultTemplate}"
                    ItemsSource="{Binding Path=CustomDropDownItems}">
                    <interactivity:Interaction.Triggers>
                        <interactivity:EventTrigger EventName="SelectionChanged">
                            <interactivity:InvokeCommandAction Command="{Binding Path=DataContext.DropDownCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" CommandParameter="{Binding ElementName=itemsList, Path=SelectedItem}" />
                        </interactivity:EventTrigger>
                    </interactivity:Interaction.Triggers>
                </ListBox>
            </syncfusion:DropDownButton>
        </DataTemplate>
        <DataTemplate x:Key="DropDownButtonWithTablePickerUI">
            <syncfusion:DropDownButton
                HorizontalAlignment="Left"
                Label="{Binding ItemHeader}"
                LargeIcon="{Binding Image, Converter={StaticResource ImageConverter}}"
                SizeForm="{Binding IsLarge, Converter={StaticResource SizeFormConverter}}"
                SmallIcon="{Binding Image, Converter={StaticResource ImageConverter}}">
                <syncfusion:TablePickerUI
                    x:Name="tablePicker"
                    Margin="3"
                    CellCount="10 8">
                    <interactivity:Interaction.Triggers>
                        <interactivity:EventTrigger EventName="Click">
                            <interactivity:InvokeCommandAction Command="{Binding Path=DataContext.DropDownCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" CommandParameter="{Binding ElementName=tablePicker}" />
                        </interactivity:EventTrigger>
                    </interactivity:Interaction.Triggers>
                </syncfusion:TablePickerUI>
            </syncfusion:DropDownButton>
        </DataTemplate>
        <DataTemplate x:Key="CheckBox">
            <syncfusion:RibbonCheckBox
                HorizontalAlignment="Left"
                Content="{Binding ItemHeader}"
                IsChecked="{Binding Checked}"
                SmallIcon="{Binding Image, Converter={StaticResource ImageConverter}}" />
        </DataTemplate>
    </Window.Resources>
    <Window.DataContext>
        <local:ViewModel />
    </Window.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <syncfusion:Ribbon
            x:Name="mainRibbon"
            VerticalAlignment="Top"
            ItemsSource="{Binding CustomRibbonTabs}"
            RibbonBarCollapseImage="App.ico">
            <syncfusion:Ribbon.ItemContainerStyle>
                <Style TargetType="{x:Type syncfusion:RibbonTab}">
                    <Setter Property="Caption" Value="{Binding TabHeader}" />
                    <Setter Property="ItemsSource" Value="{Binding CustomRibbonBars}" />
                    <Setter Property="ItemContainerStyle">
                        <Setter.Value>
                            <Style BasedOn="{StaticResource SyncfusionRibbonBarStyle}" TargetType="{x:Type syncfusion:RibbonBar}">
                                <Setter Property="Header" Value="{Binding BarHeader}" />
                                <Setter Property="ItemsSource" Value="{Binding CustomRibbonItems}" />
                                <Setter Property="ItemTemplateSelector" Value="{StaticResource TemplateSelector}" />
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </syncfusion:Ribbon.ItemContainerStyle>
        </syncfusion:Ribbon>
        <syncfusion:DocumentContainer
            x:Name="documentContainer"
            Grid.Row="1"
            MDIParentRibbon="{Binding ElementName=mainRibbon}"
            Mode="{Binding DocMode}">
            <ContentPresenter syncfusion:DocumentContainer.Header="Document 1" syncfusion:DocumentContainer.MDIBounds="150,100,400,250">
                <ContentPresenter.Content>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <syncfusion:Ribbon
                            x:Name="firstChildRibbon"
                            Margin="0,25,0,0"
                            VerticalAlignment="Top"
                            ItemsSource="{Binding FirstChildRibbonTab}">
                            <syncfusion:Ribbon.ItemContainerStyle>
                                <Style TargetType="{x:Type syncfusion:RibbonTab}">
                                    <Setter Property="Caption" Value="{Binding TabHeader}" />
                                    <Setter Property="ItemsSource" Value="{Binding CustomFirstChildRibbonBars}" />
                                    <Setter Property="ItemContainerStyle">
                                        <Setter.Value>
                                            <Style BasedOn="{StaticResource SyncfusionRibbonBarStyle}" TargetType="{x:Type syncfusion:RibbonBar}">
                                                <Setter Property="Header" Value="{Binding BarHeader}" />
                                                <Setter Property="ItemsSource" Value="{Binding CustomRibbonItems}" />
                                                <Setter Property="ItemTemplateSelector" Value="{StaticResource TemplateSelector}" />
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </syncfusion:Ribbon.ItemContainerStyle>
                        </syncfusion:Ribbon>
                        <StackPanel
                            Grid.Row="1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="45"
                                Text="Click to Unmerge"
                                TextDecorations="Underline" />
                        </StackPanel>
                    </Grid>
                </ContentPresenter.Content>
            </ContentPresenter>
            <ContentPresenter syncfusion:DocumentContainer.Header="Document 2" syncfusion:DocumentContainer.MDIBounds="10,10,400,250">
                <ContentPresenter.Content>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <syncfusion:Ribbon
                            x:Name="secondChildRibbon"
                            Margin="0,25,0,0"
                            VerticalAlignment="Top"
                            ItemsSource="{Binding SecondChildRibbonTab}"
                            SelectedTabOnMerge="SelectedTab">
                            <syncfusion:Ribbon.ItemContainerStyle>
                                <Style TargetType="{x:Type syncfusion:RibbonTab}">
                                    <Setter Property="Caption" Value="{Binding TabHeader}" />
                                    <Setter Property="MergeOrder" Value="{Binding MergeOrder}" />
                                    <Setter Property="ItemsSource" Value="{Binding CustomSecondChildRibbonBars}" />
                                    <Setter Property="ItemContainerStyle">
                                        <Setter.Value>
                                            <Style BasedOn="{StaticResource SyncfusionRibbonBarStyle}" TargetType="{x:Type syncfusion:RibbonBar}">
                                                <Setter Property="Header" Value="{Binding BarHeader}" />
                                                <Setter Property="ItemsSource" Value="{Binding CustomRibbonItems}" />
                                                <Setter Property="ItemTemplateSelector" Value="{StaticResource TemplateSelector}" />
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </syncfusion:Ribbon.ItemContainerStyle>
                        </syncfusion:Ribbon>
                        <StackPanel
                            Grid.Row="1"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="45"
                                Text="Click to Unmerge"
                                TextDecorations="Underline" />
                        </StackPanel>
                    </Grid>
                </ContentPresenter.Content>
            </ContentPresenter>
        </syncfusion:DocumentContainer>
    </Grid>
</syncfusion:RibbonWindow>
